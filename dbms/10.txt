use hariom
switched to db hariom
db["omram"].find()
db.createCollection("orders"); 
{ ok: 1 }
db.orders.insertMany([
    { cid: 1, item_name: "Item A", quantity: 5, status: "delivered" },
    { cid: 2, item_name: "Item B", quantity: 3, status: "pending" },
    { cid: 3, item_name: "Item C", quantity: 2, status: "delivered" },
    { cid: 1, item_name: "Item D", quantity: 4, status: "delivered" },
    { cid: 2, item_name: "Item E", quantity: 1, status: "cancelled" }
]);
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('670e0b988162dfe803b80b6a'),
    '1': ObjectId('670e0b988162dfe803b80b6b'),
    '2': ObjectId('670e0b988162dfe803b80b6c'),
    '3': ObjectId('670e0b988162dfe803b80b6d'),
    '4': ObjectId('670e0b988162dfe803b80b6e')
  }
}
db.orders.find(); 
{
  _id: ObjectId('670e0b988162dfe803b80b6a'),
  cid: 1,
  item_name: 'Item A',
  quantity: 5,
  status: 'delivered'
}
{
  _id: ObjectId('670e0b988162dfe803b80b6b'),
  cid: 2,
  item_name: 'Item B',
  quantity: 3,
  status: 'pending'
}
{
  _id: ObjectId('670e0b988162dfe803b80b6c'),
  cid: 3,
  item_name: 'Item C',
  quantity: 2,
  status: 'delivered'
}
{
  _id: ObjectId('670e0b988162dfe803b80b6d'),
  cid: 1,
  item_name: 'Item D',
  quantity: 4,
  status: 'delivered'
}
{
  _id: ObjectId('670e0b988162dfe803b80b6e'),
  cid: 2,
  item_name: 'Item E',
  quantity: 1,
  status: 'cancelled'
}
db.orders.createIndex({ cid: 1, item_name: 1 });
cid_1_item_name_1
db.orders.aggregate([{$group:{-id:'$cid',total_item :{$sum:'$item'}}}])
SyntaxError: Unexpected token (1:30)

> 1 | db.orders.aggregate([{$group:{-id:'$cid',total_item :{$sum:'$item'}}}])
    |                               ^
db.orders.aggregate([{$group:{_id:'$cid',total_item :{$sum:'$item'}}}])
{
  _id: 1,
  total_item: 0
}
{
  _id: 2,
  total_item: 0
}
{
  _id: 3,
  total_item: 0
}
db.orders.aggregate([{$group:{_id:'$cid',total_item :{$sum:'$item_name'}}}])
{
  _id: 3,
  total_item: 0
}
{
  _id: 2,
  total_item: 0
}
{
  _id: 1,
  total_item: 0
}
db.orders.aggregate([{$group:{_id:'$cid',total_item :{$sum:'$quantity'}}}])
{
  _id: 3,
  total_item: 2
}
{
  _id: 2,
  total_item: 4
}
{
  _id: 1,
  total_item: 9
}
db.orders.aggregate.sort({1})([{$group:{_id:'$cid',total_item :{$sum:'$quantity'}}}])
SyntaxError: Unexpected token (1:27)

> 1 | db.orders.aggregate.sort({1})([{$group:{_id:'$cid',total_item :{$sum:'$quantity'}}}])
    |                            ^
db.orders.aggregate.sort({1}):([{$group:{_id:'$cid',total_item :{$sum:'$quantity'}}}])
SyntaxError: Unexpected token (1:27)

> 1 | db.orders.aggregate.sort({1}):([{$group:{_id:'$cid',total_item :{$sum:'$quantity'}}}])
    |                            ^
db.orders.aggregate.sort({1}).([{$group:{_id:'$cid',total_item :{$sum:'$quantity'}}}])
SyntaxError: Unexpected token (1:27)

> 1 | db.orders.aggregate.sort({1}).([{$group:{_id:'$cid',total_item :{$sum:'$quantity'}}}])
    |                            ^
db.orders.aggregate.sort(.([{$group:{_id:'$cid',total_item :{$sum:'$quantity'}}}]),1)
SyntaxError: Unexpected token (1:25)

> 1 | db.orders.aggregate.sort(.([{$group:{_id:'$cid',total_item :{$sum:'$quantity'}}}]),1)
    |                          ^
db.orders.aggregate.sort(.([{$group:{_id:'$cid',total_item :{$sum:'$quantity'}}}]))
SyntaxError: Unexpected token (1:25)

> 1 | db.orders.aggregate.sort(.([{$group:{_id:'$cid',total_item :{$sum:'$quantity'}}}]))
    |                          ^
db.orders.aggregate.sort(([{$group:{_id:'$cid',total_item :{$sum:'$quantity'}}}]))
TypeError: db.orders.aggregate.sort is not a function
db.orders.sort(([{$group:{_id:'$cid',total_item :{$sum:'$quantity'}}}]))
TypeError: db.orders.sort is not a function
db.orders.distinct("cid", { status: "delivered" });
[ 1, 3 ]
db.orders.countDocuments();
5
db.orders.aggregate.($sort:{cid:1}([{$group:{_id:'$cid',total_item :{$sum:'$quantity'}}}]))
SyntaxError: Unexpected token (1:20)

> 1 | db.orders.aggregate.($sort:{cid:1}([{$group:{_id:'$cid',total_item :{$sum:'$quantity'}}}]))
    |                     ^
db.orders.aggregate([
    { $group: { _id: "$cid", total_items: { $sum: "$quantity" } } },
    { $sort: { _id: 1 } } ]);
{
  _id: 1,
  total_items: 9
}
{
  _id: 2,
  total_items: 4
}
{
  _id: 3,
  total_items: 2
}
db.createCollectio emp;
SyntaxError: Missing semicolon. (1:18)

> 1 | db.createCollectio emp;
    |                   ^
db.createCollection.emp;
db.emp.insertMany{{}}
SyntaxError: Missing semicolon. (1:17)

> 1 | db.emp.insertMany{{}}
    |                  ^
db.emp.insertMany({[]})
SyntaxError: Unexpected token (1:20)

> 1 | db.emp.insertMany({[]})
    |                     ^
 
 
 
db.emp.insertMany([
    { eid: 1, ename: "omkar",dept:"comp", salary:600000 ,designation:"HR"},
    { eid: 2, ename: "hareram", dept: "it", salary:55000,designation:"CEO"},
    { eid: 3, ename: "akash", dept:"comp", salary:111111 ,designation:"Manager"},
    { eid: 4, ename: "aditya", dept:"aids", salary:232323 ,designation:"Tester"},
    { eid: 5, ename: "BH", dept:"it", salary:56798,designation:"developer" }
]);
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('670e15fe8162dfe803b80b6f'),
    '1': ObjectId('670e15fe8162dfe803b80b70'),
    '2': ObjectId('670e15fe8162dfe803b80b71'),
    '3': ObjectId('670e15fe8162dfe803b80b72'),
    '4': ObjectId('670e15fe8162dfe803b80b73')
  }
}
db.emp.find(); 
{
  _id: ObjectId('670e15fe8162dfe803b80b6f'),
  eid: 1,
  ename: 'omkar',
  dept: 'comp',
  salary: 600000,
  designation: 'HR'
}
{
  _id: ObjectId('670e15fe8162dfe803b80b70'),
  eid: 2,
  ename: 'hareram',
  dept: 'it',
  salary: 55000,
  designation: 'CEO'
}
{
  _id: ObjectId('670e15fe8162dfe803b80b71'),
  eid: 3,
  ename: 'akash',
  dept: 'comp',
  salary: 111111,
  designation: 'Manager'
}
{
  _id: ObjectId('670e15fe8162dfe803b80b72'),
  eid: 4,
  ename: 'aditya',
  dept: 'aids',
  salary: 232323,
  designation: 'Tester'
}
{
  _id: ObjectId('670e15fe8162dfe803b80b73'),
  eid: 5,
  ename: 'BH',
  dept: 'it',
  salary: 56798,
  designation: 'developer'
}
db.emp.aggregate([{$group:{_id :'$eid',minimum:{$min:'$salary'}}}])
{
  _id: 1,
  minimum: 600000
}
{
  _id: 3,
  minimum: 111111
}
{
  _id: 5,
  minimum: 56798
}
{
  _id: 2,
  minimum: 55000
}
{
  _id: 4,
  minimum: 232323
}
db.orders.aggregate([{$group:{_id:'$eid',minimum :{$min:'$salary'}}}])
{
  _id: null,
  minimum: null
}
db.emp.aggregate([{$group:{_id:'$dept',minimum :{$min:'$salary'}}}])
{
  _id: 'comp',
  minimum: 111111
}
{
  _id: 'it',
  minimum: 55000
}
{
  _id: 'aids',
  minimum: 232323
}
